// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_16d41c6fc5b8bf5d
#define INCLUDED_16d41c6fc5b8bf5d
#include "maglev/MagLev.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_shoppingcart_CartModel
#include <shoppingcart/CartModel.h>
#endif
#ifndef INCLUDED_shoppingcart_CartRepository
#include <shoppingcart/CartRepository.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dddbd359b3f7b6e4_11_new,"shoppingcart.CartRepository","new",0x85791002,"shoppingcart.CartRepository.new","shoppingcart/CartRepository.hx",11,0xa4c8548d)
HX_LOCAL_STACK_FRAME(_hx_pos_dddbd359b3f7b6e4_17_Add,"shoppingcart.CartRepository","Add",0x8556e9a3,"shoppingcart.CartRepository.Add","shoppingcart/CartRepository.hx",17,0xa4c8548d)
HX_LOCAL_STACK_FRAME(_hx_pos_dddbd359b3f7b6e4_37_Remove,"shoppingcart.CartRepository","Remove",0xc89dc202,"shoppingcart.CartRepository.Remove","shoppingcart/CartRepository.hx",37,0xa4c8548d)
namespace shoppingcart{

void CartRepository_obj::__construct( ::maglev::MagLev bus){
            	HX_STACKFRAME(&_hx_pos_dddbd359b3f7b6e4_11_new)
HXLINE(  12)		this->bus = bus;
HXLINE(  13)		this->carts = ::Array_obj< ::Dynamic>::__new();
HXLINE(  14)		this->counter = 0;
            	}

Dynamic CartRepository_obj::__CreateEmpty() { return new CartRepository_obj; }

void *CartRepository_obj::_hx_vtable = 0;

Dynamic CartRepository_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CartRepository_obj > _hx_result = new CartRepository_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CartRepository_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1d81dd02;
}

void CartRepository_obj::Add( ::shoppingcart::CartModel cart, ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_dddbd359b3f7b6e4_17_Add)
HXLINE(  30)		::String cartId = ::Std_obj::string(this->counter);
HXLINE(  31)		 ::shoppingcart::CartRepository _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  31)		_hx_tmp->counter = (_hx_tmp->counter + 1);
HXLINE(  32)		cart->id = cartId;
HXLINE(  33)		this->carts->push(cart);
HXLINE(  34)		callback(cartId);
            	}


HX_DEFINE_DYNAMIC_FUNC2(CartRepository_obj,Add,(void))

void CartRepository_obj::Remove(::String cartId, ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_dddbd359b3f7b6e4_37_Remove)
HXLINE(  38)		{
HXLINE(  38)			int _g = 0;
HXDLIN(  38)			::Array< ::Dynamic> _g1 = this->carts;
HXDLIN(  38)			while((_g < _g1->length)){
HXLINE(  38)				 ::shoppingcart::CartModel cart = _g1->__get(_g).StaticCast<  ::shoppingcart::CartModel >();
HXDLIN(  38)				_g = (_g + 1);
HXLINE(  39)				if ((cart->id == cartId)) {
HXLINE(  40)					this->carts->remove(cart);
HXLINE(  41)					callback();
HXLINE(  42)					return;
            				}
            			}
            		}
HXLINE(  45)		callback();
            	}


HX_DEFINE_DYNAMIC_FUNC2(CartRepository_obj,Remove,(void))


::hx::ObjectPtr< CartRepository_obj > CartRepository_obj::__new( ::maglev::MagLev bus) {
	::hx::ObjectPtr< CartRepository_obj > __this = new CartRepository_obj();
	__this->__construct(bus);
	return __this;
}

::hx::ObjectPtr< CartRepository_obj > CartRepository_obj::__alloc(::hx::Ctx *_hx_ctx, ::maglev::MagLev bus) {
	CartRepository_obj *__this = (CartRepository_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CartRepository_obj), true, "shoppingcart.CartRepository"));
	*(void **)__this = CartRepository_obj::_hx_vtable;
	__this->__construct(bus);
	return __this;
}

CartRepository_obj::CartRepository_obj()
{
}

void CartRepository_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CartRepository);
	HX_MARK_MEMBER_NAME(bus,"bus");
	HX_MARK_MEMBER_NAME(carts,"carts");
	HX_MARK_MEMBER_NAME(counter,"counter");
	HX_MARK_END_CLASS();
}

void CartRepository_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bus,"bus");
	HX_VISIT_MEMBER_NAME(carts,"carts");
	HX_VISIT_MEMBER_NAME(counter,"counter");
}

::hx::Val CartRepository_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bus") ) { return ::hx::Val( bus ); }
		if (HX_FIELD_EQ(inName,"Add") ) { return ::hx::Val( Add_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"carts") ) { return ::hx::Val( carts ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"Remove") ) { return ::hx::Val( Remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"counter") ) { return ::hx::Val( counter ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CartRepository_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bus") ) { bus=inValue.Cast<  ::maglev::MagLev >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"carts") ) { carts=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"counter") ) { counter=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CartRepository_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bus",40,c3,4a,00));
	outFields->push(HX_("carts",93,06,20,41));
	outFields->push(HX_("counter",fc,ae,59,1d));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CartRepository_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  ::maglev::MagLev */ ,(int)offsetof(CartRepository_obj,bus),HX_("bus",40,c3,4a,00)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(CartRepository_obj,carts),HX_("carts",93,06,20,41)},
	{::hx::fsInt,(int)offsetof(CartRepository_obj,counter),HX_("counter",fc,ae,59,1d)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CartRepository_obj_sStaticStorageInfo = 0;
#endif

static ::String CartRepository_obj_sMemberFields[] = {
	HX_("bus",40,c3,4a,00),
	HX_("carts",93,06,20,41),
	HX_("counter",fc,ae,59,1d),
	HX_("Add",01,aa,31,00),
	HX_("Remove",64,10,1d,39),
	::String(null()) };

::hx::Class CartRepository_obj::__mClass;

void CartRepository_obj::__register()
{
	CartRepository_obj _hx_dummy;
	CartRepository_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("shoppingcart.CartRepository",10,a7,74,7b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CartRepository_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CartRepository_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CartRepository_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CartRepository_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace shoppingcart
