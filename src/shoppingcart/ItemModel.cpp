// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_shoppingcart_ItemModel
#include <shoppingcart/ItemModel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_79353e81683b88b0_5_new,"shoppingcart.ItemModel","new",0xa194d2c2,"shoppingcart.ItemModel.new","shoppingcart/ItemModel.hx",5,0xbf03b86f)
namespace shoppingcart{

void ItemModel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_79353e81683b88b0_5_new)
            	}

Dynamic ItemModel_obj::__CreateEmpty() { return new ItemModel_obj; }

void *ItemModel_obj::_hx_vtable = 0;

Dynamic ItemModel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ItemModel_obj > _hx_result = new ItemModel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ItemModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x05e337ca;
}


ItemModel_obj::ItemModel_obj()
{
}

void ItemModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ItemModel);
	HX_MARK_MEMBER_NAME(cartId,"cartId");
	HX_MARK_MEMBER_NAME(idx,"idx");
	HX_MARK_MEMBER_NAME(itemId,"itemId");
	HX_MARK_MEMBER_NAME(qty,"qty");
	HX_MARK_MEMBER_NAME(price,"price");
	HX_MARK_END_CLASS();
}

void ItemModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(cartId,"cartId");
	HX_VISIT_MEMBER_NAME(idx,"idx");
	HX_VISIT_MEMBER_NAME(itemId,"itemId");
	HX_VISIT_MEMBER_NAME(qty,"qty");
	HX_VISIT_MEMBER_NAME(price,"price");
}

::hx::Val ItemModel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"idx") ) { return ::hx::Val( idx ); }
		if (HX_FIELD_EQ(inName,"qty") ) { return ::hx::Val( qty ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { return ::hx::Val( price ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"cartId") ) { return ::hx::Val( cartId ); }
		if (HX_FIELD_EQ(inName,"itemId") ) { return ::hx::Val( itemId ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ItemModel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"idx") ) { idx=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"qty") ) { qty=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { price=inValue.Cast< Float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"cartId") ) { cartId=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"itemId") ) { itemId=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ItemModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("cartId",db,95,e5,ba));
	outFields->push(HX_("idx",3d,04,50,00));
	outFields->push(HX_("itemId",ce,af,09,09));
	outFields->push(HX_("qty",36,24,56,00));
	outFields->push(HX_("price",89,4e,8b,c8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ItemModel_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(ItemModel_obj,cartId),HX_("cartId",db,95,e5,ba)},
	{::hx::fsInt,(int)offsetof(ItemModel_obj,idx),HX_("idx",3d,04,50,00)},
	{::hx::fsString,(int)offsetof(ItemModel_obj,itemId),HX_("itemId",ce,af,09,09)},
	{::hx::fsInt,(int)offsetof(ItemModel_obj,qty),HX_("qty",36,24,56,00)},
	{::hx::fsFloat,(int)offsetof(ItemModel_obj,price),HX_("price",89,4e,8b,c8)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ItemModel_obj_sStaticStorageInfo = 0;
#endif

static ::String ItemModel_obj_sMemberFields[] = {
	HX_("cartId",db,95,e5,ba),
	HX_("idx",3d,04,50,00),
	HX_("itemId",ce,af,09,09),
	HX_("qty",36,24,56,00),
	HX_("price",89,4e,8b,c8),
	::String(null()) };

::hx::Class ItemModel_obj::__mClass;

void ItemModel_obj::__register()
{
	ItemModel_obj _hx_dummy;
	ItemModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("shoppingcart.ItemModel",d0,09,48,60);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ItemModel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ItemModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ItemModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ItemModel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace shoppingcart
