// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ds__Map_Map_Impl_
#include <haxe/ds/_Map/Map_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_75_set,"haxe.ds._Map.Map_Impl_","set",0x6544f0d6,"haxe.ds._Map.Map_Impl_.set","/opt/haxe/std/haxe/ds/Map.hx",75,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_93_get,"haxe.ds._Map.Map_Impl_","get",0x653bd5ca,"haxe.ds._Map.Map_Impl_.get","/opt/haxe/std/haxe/ds/Map.hx",93,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_101_exists,"haxe.ds._Map.Map_Impl_","exists",0xbe950128,"haxe.ds._Map.Map_Impl_.exists","/opt/haxe/std/haxe/ds/Map.hx",101,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_110_remove,"haxe.ds._Map.Map_Impl_","remove",0x033d7f90,"haxe.ds._Map.Map_Impl_.remove","/opt/haxe/std/haxe/ds/Map.hx",110,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_118_keys,"haxe.ds._Map.Map_Impl_","keys",0x31c41a40,"haxe.ds._Map.Map_Impl_.keys","/opt/haxe/std/haxe/ds/Map.hx",118,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_127_iterator,"haxe.ds._Map.Map_Impl_","iterator",0x53c7983a,"haxe.ds._Map.Map_Impl_.iterator","/opt/haxe/std/haxe/ds/Map.hx",127,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_136_keyValueIterator,"haxe.ds._Map.Map_Impl_","keyValueIterator",0xadc547ac,"haxe.ds._Map.Map_Impl_.keyValueIterator","/opt/haxe/std/haxe/ds/Map.hx",136,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_145_copy,"haxe.ds._Map.Map_Impl_","copy",0x2c81f401,"haxe.ds._Map.Map_Impl_.copy","/opt/haxe/std/haxe/ds/Map.hx",145,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_154_toString,"haxe.ds._Map.Map_Impl_","toString",0xf89c1ef8,"haxe.ds._Map.Map_Impl_.toString","/opt/haxe/std/haxe/ds/Map.hx",154,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_161_clear,"haxe.ds._Map.Map_Impl_","clear",0xc32f7bc1,"haxe.ds._Map.Map_Impl_.clear","/opt/haxe/std/haxe/ds/Map.hx",161,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_164_arrayWrite,"haxe.ds._Map.Map_Impl_","arrayWrite",0xeb5cfdd2,"haxe.ds._Map.Map_Impl_.arrayWrite","/opt/haxe/std/haxe/ds/Map.hx",164,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_170_toStringMap,"haxe.ds._Map.Map_Impl_","toStringMap",0xc9724e84,"haxe.ds._Map.Map_Impl_.toStringMap","/opt/haxe/std/haxe/ds/Map.hx",170,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_174_toIntMap,"haxe.ds._Map.Map_Impl_","toIntMap",0x85e02b14,"haxe.ds._Map.Map_Impl_.toIntMap","/opt/haxe/std/haxe/ds/Map.hx",174,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_178_toEnumValueMapMap,"haxe.ds._Map.Map_Impl_","toEnumValueMapMap",0x1961e729,"haxe.ds._Map.Map_Impl_.toEnumValueMapMap","/opt/haxe/std/haxe/ds/Map.hx",178,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_182_toObjectMap,"haxe.ds._Map.Map_Impl_","toObjectMap",0x4536e156,"haxe.ds._Map.Map_Impl_.toObjectMap","/opt/haxe/std/haxe/ds/Map.hx",182,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_186_fromStringMap,"haxe.ds._Map.Map_Impl_","fromStringMap",0xf199cdb5,"haxe.ds._Map.Map_Impl_.fromStringMap","/opt/haxe/std/haxe/ds/Map.hx",186,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_190_fromIntMap,"haxe.ds._Map.Map_Impl_","fromIntMap",0x028eb343,"haxe.ds._Map.Map_Impl_.fromIntMap","/opt/haxe/std/haxe/ds/Map.hx",190,0x9e8490e3)
HX_LOCAL_STACK_FRAME(_hx_pos_c8f083689c43f3bd_194_fromObjectMap,"haxe.ds._Map.Map_Impl_","fromObjectMap",0x6d5e6087,"haxe.ds._Map.Map_Impl_.fromObjectMap","/opt/haxe/std/haxe/ds/Map.hx",194,0x9e8490e3)
namespace haxe{
namespace ds{
namespace _Map{

void Map_Impl__obj::__construct() { }

Dynamic Map_Impl__obj::__CreateEmpty() { return new Map_Impl__obj; }

void *Map_Impl__obj::_hx_vtable = 0;

Dynamic Map_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Map_Impl__obj > _hx_result = new Map_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Map_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x32801086;
}

void Map_Impl__obj::set(::Dynamic this1, ::Dynamic key, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_75_set)
HXDLIN(  75)		::haxe::IMap_obj::set(this1,key,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,set,(void))

 ::Dynamic Map_Impl__obj::get(::Dynamic this1, ::Dynamic key){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_93_get)
HXDLIN(  93)		return ::haxe::IMap_obj::get(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,get,return )

bool Map_Impl__obj::exists(::Dynamic this1, ::Dynamic key){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_101_exists)
HXDLIN( 101)		return ::haxe::IMap_obj::exists(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,exists,return )

bool Map_Impl__obj::remove(::Dynamic this1, ::Dynamic key){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_110_remove)
HXDLIN( 110)		return ::haxe::IMap_obj::remove(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,remove,return )

 ::Dynamic Map_Impl__obj::keys(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_118_keys)
HXDLIN( 118)		return ::haxe::IMap_obj::keys(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,keys,return )

 ::Dynamic Map_Impl__obj::iterator(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_127_iterator)
HXDLIN( 127)		return ::haxe::IMap_obj::iterator(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,iterator,return )

 ::Dynamic Map_Impl__obj::keyValueIterator(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_136_keyValueIterator)
HXDLIN( 136)		return ::haxe::IMap_obj::keyValueIterator(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,keyValueIterator,return )

::Dynamic Map_Impl__obj::copy(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_145_copy)
HXDLIN( 145)		return ::haxe::IMap_obj::copy(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,copy,return )

::String Map_Impl__obj::toString(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_154_toString)
HXDLIN( 154)		return ::haxe::IMap_obj::toString(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,toString,return )

void Map_Impl__obj::clear(::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_161_clear)
HXDLIN( 161)		::haxe::IMap_obj::clear(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,clear,(void))

 ::Dynamic Map_Impl__obj::arrayWrite(::Dynamic this1, ::Dynamic k, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_164_arrayWrite)
HXLINE( 165)		::haxe::IMap_obj::set(this1,k,v);
HXLINE( 166)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,arrayWrite,return )

 ::haxe::ds::StringMap Map_Impl__obj::toStringMap(::Dynamic t){
            	HX_GC_STACKFRAME(&_hx_pos_c8f083689c43f3bd_170_toStringMap)
HXDLIN( 170)		return  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,toStringMap,return )

 ::haxe::ds::IntMap Map_Impl__obj::toIntMap(::Dynamic t){
            	HX_GC_STACKFRAME(&_hx_pos_c8f083689c43f3bd_174_toIntMap)
HXDLIN( 174)		return  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,toIntMap,return )

 ::haxe::ds::EnumValueMap Map_Impl__obj::toEnumValueMapMap(::Dynamic t){
            	HX_GC_STACKFRAME(&_hx_pos_c8f083689c43f3bd_178_toEnumValueMapMap)
HXDLIN( 178)		return  ::haxe::ds::EnumValueMap_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,toEnumValueMapMap,return )

 ::haxe::ds::ObjectMap Map_Impl__obj::toObjectMap(::Dynamic t){
            	HX_GC_STACKFRAME(&_hx_pos_c8f083689c43f3bd_182_toObjectMap)
HXDLIN( 182)		return  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,toObjectMap,return )

 ::haxe::ds::StringMap Map_Impl__obj::fromStringMap( ::haxe::ds::StringMap map){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_186_fromStringMap)
HXDLIN( 186)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,fromStringMap,return )

 ::haxe::ds::IntMap Map_Impl__obj::fromIntMap( ::haxe::ds::IntMap map){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_190_fromIntMap)
HXDLIN( 190)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,fromIntMap,return )

 ::haxe::ds::ObjectMap Map_Impl__obj::fromObjectMap( ::haxe::ds::ObjectMap map){
            	HX_STACKFRAME(&_hx_pos_c8f083689c43f3bd_194_fromObjectMap)
HXDLIN( 194)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,fromObjectMap,return )


Map_Impl__obj::Map_Impl__obj()
{
}

bool Map_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { outValue = keys_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { outValue = clear_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toIntMap") ) { outValue = toIntMap_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"arrayWrite") ) { outValue = arrayWrite_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromIntMap") ) { outValue = fromIntMap_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"toStringMap") ) { outValue = toStringMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toObjectMap") ) { outValue = toObjectMap_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromStringMap") ) { outValue = fromStringMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromObjectMap") ) { outValue = fromObjectMap_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"keyValueIterator") ) { outValue = keyValueIterator_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"toEnumValueMapMap") ) { outValue = toEnumValueMapMap_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Map_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Map_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Map_Impl__obj::__mClass;

static ::String Map_Impl__obj_sStaticFields[] = {
	HX_("set",a2,9b,57,00),
	HX_("get",96,80,4e,00),
	HX_("exists",dc,1d,e0,bf),
	HX_("remove",44,9c,88,04),
	HX_("keys",f4,e1,06,47),
	HX_("iterator",ee,49,9a,93),
	HX_("keyValueIterator",60,cd,ee,4a),
	HX_("copy",b5,bb,c4,41),
	HX_("toString",ac,d0,6e,38),
	HX_("clear",8d,71,5b,48),
	HX_("arrayWrite",86,84,86,ca),
	HX_("toStringMap",50,a5,9e,2e),
	HX_("toIntMap",c8,dc,b2,c5),
	HX_("toEnumValueMapMap",f5,5e,8d,00),
	HX_("toObjectMap",22,38,63,aa),
	HX_("fromStringMap",81,6f,a2,3b),
	HX_("fromIntMap",f7,39,b8,e1),
	HX_("fromObjectMap",53,02,67,b7),
	::String(null())
};

void Map_Impl__obj::__register()
{
	Map_Impl__obj _hx_dummy;
	Map_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ds._Map.Map_Impl_",a2,0b,3a,f2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Map_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Map_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Map_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Map_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Map_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ds
} // end namespace _Map
