// Generated by Haxe 4.1.1
#ifndef INCLUDED_maglev_MagLevAny
#define INCLUDED_maglev_MagLevAny

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(maglev,MagLevAny)
HX_DECLARE_CLASS1(maglev,MagLevString)

namespace maglev{


class HXCPP_CLASS_ATTRIBUTES MagLevAny_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MagLevAny_obj OBJ_;
		MagLevAny_obj();

	public:
		enum { _hx_ClassId = 0x7fdb9bc4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="maglev.MagLevAny")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"maglev.MagLevAny"); }
		static ::hx::ObjectPtr< MagLevAny_obj > __new();
		static ::hx::ObjectPtr< MagLevAny_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MagLevAny_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MagLevAny",e2,7d,a5,b2); }

		virtual  ::maglev::MagLevString toJson();
		::Dynamic toJson_dyn();

		virtual int getType();
		::Dynamic getType_dyn();

		virtual bool isEqual( ::maglev::MagLevAny o);
		::Dynamic isEqual_dyn();

};

} // end namespace maglev

#endif /* INCLUDED_maglev_MagLevAny */ 
