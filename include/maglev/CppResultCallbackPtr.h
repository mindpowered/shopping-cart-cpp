// Generated by Haxe 4.1.1
#ifndef INCLUDED_maglev_CppResultCallbackPtr
#define INCLUDED_maglev_CppResultCallbackPtr

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_cpp_Finalizable
#include <cpp/Finalizable.h>
#endif
#ifndef INCLUDED_7625ac700f09f214
#define INCLUDED_7625ac700f09f214
#include "functional"
#endif
HX_DECLARE_CLASS1(cpp,Finalizable)
HX_DECLARE_CLASS1(maglev,CppAny)
HX_DECLARE_CLASS1(maglev,CppResultCallbackPtr)

namespace maglev{


class HXCPP_CLASS_ATTRIBUTES CppResultCallbackPtr_obj : public  ::cpp::Finalizable_obj
{
	public:
		typedef  ::cpp::Finalizable_obj super;
		typedef CppResultCallbackPtr_obj OBJ_;
		CppResultCallbackPtr_obj();

	public:
		enum { _hx_ClassId = 0x02559257 };

		void __construct(::cpp::Function< void  ( ::maglev::CppAny) > inFunc);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="maglev.CppResultCallbackPtr")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"maglev.CppResultCallbackPtr"); }
		static ::hx::ObjectPtr< CppResultCallbackPtr_obj > __new(::cpp::Function< void  ( ::maglev::CppAny) > inFunc);
		static ::hx::ObjectPtr< CppResultCallbackPtr_obj > __alloc(::hx::Ctx *_hx_ctx,::cpp::Function< void  ( ::maglev::CppAny) > inFunc);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CppResultCallbackPtr_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CppResultCallbackPtr",c9,2e,1a,65); }

		::cpp::Pointer<  std::function<void(CppAny)> > lambda;
		void call( ::maglev::CppAny ret);
		::Dynamic call_dyn();

		void finalize();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace maglev

#endif /* INCLUDED_maglev_CppResultCallbackPtr */ 
