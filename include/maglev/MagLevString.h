// Generated by Haxe 4.1.1
#ifndef INCLUDED_maglev_MagLevString
#define INCLUDED_maglev_MagLevString

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
HX_DECLARE_STACK_FRAME(_hx_pos_fc3d282075c9cb4d_590_new)
HX_DECLARE_CLASS1(maglev,MagLevAny)
HX_DECLARE_CLASS1(maglev,MagLevString)

namespace maglev{


class HXCPP_CLASS_ATTRIBUTES MagLevString_obj : public  ::maglev::MagLevAny_obj
{
	public:
		typedef  ::maglev::MagLevAny_obj super;
		typedef MagLevString_obj OBJ_;
		MagLevString_obj();

	public:
		enum { _hx_ClassId = 0x0a8c36b9 };

		void __construct(::String value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="maglev.MagLevString")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"maglev.MagLevString"); }

		inline static ::hx::ObjectPtr< MagLevString_obj > __new(::String value) {
			::hx::ObjectPtr< MagLevString_obj > __this = new MagLevString_obj();
			__this->__construct(value);
			return __this;
		}

		inline static ::hx::ObjectPtr< MagLevString_obj > __alloc(::hx::Ctx *_hx_ctx,::String value) {
			MagLevString_obj *__this = (MagLevString_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MagLevString_obj), true, "maglev.MagLevString"));
			*(void **)__this = MagLevString_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_fc3d282075c9cb4d_590_new)
HXLINE( 591)		( ( ::maglev::MagLevString)(__this) )->value = value;
HXLINE( 592)		__this->super::__construct();
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MagLevString_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MagLevString",9b,63,0c,9a); }

		static  ::maglev::MagLevString fromString(::String value);
		static ::Dynamic fromString_dyn();

		static int getStaticType();
		static ::Dynamic getStaticType_dyn();

		::String value;
		::String getString();
		::Dynamic getString_dyn();

		int getType();

		bool isEqual( ::maglev::MagLevAny other);

		 ::maglev::MagLevString toJson();

};

} // end namespace maglev

#endif /* INCLUDED_maglev_MagLevString */ 
