// Generated by Haxe 4.1.1
#ifndef INCLUDED_maglev_MagLevNumber
#define INCLUDED_maglev_MagLevNumber

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
HX_DECLARE_CLASS1(maglev,MagLevAny)
HX_DECLARE_CLASS1(maglev,MagLevNumber)
HX_DECLARE_CLASS1(maglev,MagLevString)

namespace maglev{


class HXCPP_CLASS_ATTRIBUTES MagLevNumber_obj : public  ::maglev::MagLevAny_obj
{
	public:
		typedef  ::maglev::MagLevAny_obj super;
		typedef MagLevNumber_obj OBJ_;
		MagLevNumber_obj();

	public:
		enum { _hx_ClassId = 0x37a67bbd };

		void __construct(Float value);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="maglev.MagLevNumber")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"maglev.MagLevNumber"); }
		static ::hx::ObjectPtr< MagLevNumber_obj > __new(Float value);
		static ::hx::ObjectPtr< MagLevNumber_obj > __alloc(::hx::Ctx *_hx_ctx,Float value);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MagLevNumber_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MagLevNumber",93,c1,56,2a); }

		static  ::maglev::MagLevNumber fromFloat(Float value);
		static ::Dynamic fromFloat_dyn();

		static  ::maglev::MagLevNumber fromInt(int value);
		static ::Dynamic fromInt_dyn();

		static int getStaticType();
		static ::Dynamic getStaticType_dyn();

		Float value;
		Float getFloat();
		::Dynamic getFloat_dyn();

		int getInt();
		::Dynamic getInt_dyn();

		int getType();

		bool isEqual( ::maglev::MagLevAny other);

		 ::maglev::MagLevString toJson();

};

} // end namespace maglev

#endif /* INCLUDED_maglev_MagLevNumber */ 
