// Generated by Haxe 4.1.1
#ifndef INCLUDED__EnumValue_EnumValue_Impl_
#define INCLUDED__EnumValue_EnumValue_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(_EnumValue,EnumValue_Impl_)

namespace _EnumValue{


class HXCPP_CLASS_ATTRIBUTES EnumValue_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef EnumValue_Impl__obj OBJ_;
		EnumValue_Impl__obj();

	public:
		enum { _hx_ClassId = 0x2f494c3f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="_EnumValue.EnumValue_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"_EnumValue.EnumValue_Impl_"); }

		inline static ::hx::ObjectPtr< EnumValue_Impl__obj > __new() {
			::hx::ObjectPtr< EnumValue_Impl__obj > __this = new EnumValue_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< EnumValue_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			EnumValue_Impl__obj *__this = (EnumValue_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(EnumValue_Impl__obj), false, "_EnumValue.EnumValue_Impl_"));
			*(void **)__this = EnumValue_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EnumValue_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EnumValue_Impl_",30,e9,1d,ab); }

		static bool match( ::Dynamic this1, ::Dynamic pattern);
		static ::Dynamic match_dyn();

};

} // end namespace _EnumValue

#endif /* INCLUDED__EnumValue_EnumValue_Impl_ */ 
