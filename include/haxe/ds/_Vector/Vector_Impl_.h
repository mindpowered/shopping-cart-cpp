// Generated by Haxe 4.1.1
#ifndef INCLUDED_haxe_ds__Vector_Vector_Impl_
#define INCLUDED_haxe_ds__Vector_Vector_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(haxe,ds,_Vector,Vector_Impl_)

namespace haxe{
namespace ds{
namespace _Vector{


class HXCPP_CLASS_ATTRIBUTES Vector_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Vector_Impl__obj OBJ_;
		Vector_Impl__obj();

	public:
		enum { _hx_ClassId = 0x7c912630 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ds._Vector.Vector_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe.ds._Vector.Vector_Impl_"); }

		inline static ::hx::ObjectPtr< Vector_Impl__obj > __new() {
			::hx::ObjectPtr< Vector_Impl__obj > __this = new Vector_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Vector_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Vector_Impl__obj *__this = (Vector_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Vector_Impl__obj), false, "haxe.ds._Vector.Vector_Impl_"));
			*(void **)__this = Vector_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Vector_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Vector_Impl_",c3,ad,36,7e); }

		static ::cpp::VirtualArray _new(int length);
		static ::Dynamic _new_dyn();

		static  ::Dynamic get(::cpp::VirtualArray this1,int index);
		static ::Dynamic get_dyn();

		static  ::Dynamic set(::cpp::VirtualArray this1,int index, ::Dynamic val);
		static ::Dynamic set_dyn();

		static int get_length(::cpp::VirtualArray this1);
		static ::Dynamic get_length_dyn();

		static void blit(::cpp::VirtualArray src,int srcPos,::cpp::VirtualArray dest,int destPos,int len);
		static ::Dynamic blit_dyn();

		static ::cpp::VirtualArray toArray(::cpp::VirtualArray this1);
		static ::Dynamic toArray_dyn();

		static ::cpp::VirtualArray toData(::cpp::VirtualArray this1);
		static ::Dynamic toData_dyn();

		static ::cpp::VirtualArray fromData(::cpp::VirtualArray data);
		static ::Dynamic fromData_dyn();

		static ::cpp::VirtualArray fromArrayCopy(::cpp::VirtualArray array);
		static ::Dynamic fromArrayCopy_dyn();

		static ::cpp::VirtualArray copy(::cpp::VirtualArray this1);
		static ::Dynamic copy_dyn();

		static ::String join(::cpp::VirtualArray this1,::String sep);
		static ::Dynamic join_dyn();

		static ::cpp::VirtualArray map(::cpp::VirtualArray this1, ::Dynamic f);
		static ::Dynamic map_dyn();

		static void sort(::cpp::VirtualArray this1, ::Dynamic f);
		static ::Dynamic sort_dyn();

};

} // end namespace haxe
} // end namespace ds
} // end namespace _Vector

#endif /* INCLUDED_haxe_ds__Vector_Vector_Impl_ */ 
